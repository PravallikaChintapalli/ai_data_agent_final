import React from 'react'
import { motion } from 'framer-motion'
import { TrendingUp, TrendingDown, AlertTriangle, Info, Lightbulb, BarChart3 } from 'lucide-react'
import { InsightData } from '../types'

interface InsightVisualizationProps {
  data: InsightData
}

export default function InsightVisualization({ data }: InsightVisualizationProps) {
  const getInsightIcon = () => {
    switch (data.type) {
      case 'trend':
        return data.value && Number(data.value) > 0 ? TrendingUp : TrendingDown
      case 'correlation':
        return BarChart3
      case 'anomaly':
        return AlertTriangle
      default:
        return Lightbulb
    }
  }

  const getInsightColor = () => {
    switch (data.type) {
      case 'trend':
        return data.value && Number(data.value) > 0 
          ? 'text-green-600 bg-green-50 border-green-200'
          : 'text-red-600 bg-red-50 border-red-200'
      case 'correlation':
        return 'text-blue-600 bg-blue-50 border-blue-200'
      case 'anomaly':
        return 'text-orange-600 bg-orange-50 border-orange-200'
      default:
        return 'text-purple-600 bg-purple-50 border-purple-200'
    }
  }

  const getConfidenceColor = (confidence: number) => {
    if (confidence >= 0.8) return 'text-green-600 bg-green-100'
    if (confidence >= 0.6) return 'text-yellow-600 bg-yellow-100'
    return 'text-red-600 bg-red-100'
  }

  const getConfidenceLabel = (confidence: number) => {
    if (confidence >= 0.8) return 'High Confidence'
    if (confidence >= 0.6) return 'Medium Confidence'
    return 'Low Confidence'
  }

  const Icon = getInsightIcon()

  return (
    <motion.div
      initial={{ opacity: 0, scale: 0.95 }}
      animate={{ opacity: 1, scale: 1 }}
      className={`border rounded-lg p-6 ${getInsightColor()}`}
    >
      <div className="flex items-start justify-between mb-4">
        <div className="flex items-center space-x-3">
          <Icon className="w-6 h-6" />
          <h3 className="text-lg font-semibold">{data.title}</h3>
        </div>
        
        <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${getConfidenceColor(data.confidence)}`}>
          {getConfidenceLabel(data.confidence)}
        </span>
      </div>

      <p className="text-sm mb-4 leading-relaxed">{data.description}</p>

      {data.value !== undefined && (
        <div className="flex items-center space-x-4">
          <div className="bg-white bg-opacity-70 rounded-lg px-4 py-2">
            <span className="text-sm font-medium">Value:</span>
            <span className="ml-2 text-lg font-bold">
              {typeof data.value === 'number' 
                ? data.value.toLocaleString() 
                : data.value
              }
            </span>
          </div>
          
          <div className="bg-white bg-opacity-70 rounded-lg px-4 py-2">
            <span className="text-sm font-medium">Confidence:</span>
            <span className="ml-2 text-lg font-bold">
              {Math.round(data.confidence * 100)}%
            </span>
          </div>
        </div>
      )}

      <div className="mt-4 pt-4 border-t border-current border-opacity-20">
        <div className="flex items-center space-x-2 text-xs">
          <Info className="w-4 h-4" />
          <span>
            This insight was generated by analyzing patterns in your data. 
            {data.confidence < 0.6 && ' Consider reviewing the source data for accuracy.'}
          </span>
        </div>
      </div>
    </motion.div>
  )
}
